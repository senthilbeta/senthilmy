If you are using NodeMCU, which is based on the ESP8266 microcontroller, you can utilize the Arduino IDE with the ESP8266 core to program it. Here is a simple example using NodeMCU, the MFRC522 RFID reader, and connecting to a web server.
Hardware Setup:

    NodeMCU and MFRC522 Wiring:
        Connect the MFRC522 to your NodeMCU as follows:
            MFRC522 SDA/SS to D2
            MFRC522 SCK to D5
            MFRC522 MOSI to D7
            MFRC522 MISO to D6
            MFRC522 RST to D1
            MFRC522 GND to GND
            MFRC522 3.3V to 3.3V

NodeMCU RFID Reader Code:

    
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <MFRC522.h>
#include <SPI.h>

#define SS_PIN D2
#define RST_PIN D1

MFRC522 mfrc522(SS_PIN, RST_PIN);

const char *ssid = "YourWiFiSSID";
const char *password = "YourWiFiPassword";
const char *serverUrl = "http://your-web-server-endpoint"; // Change this to your server endpoint

void setup() {
  Serial.begin(115200);
  delay(10);

  SPI.begin();
  mfrc522.PCD_Init();

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String uid = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      uid += String(mfrc522.uid.uidByte[i], HEX);
    }
    uid.toUpperCase();
    
    // Send UID to the web server
    sendToServer(uid);

    mfrc522.PICC_HaltA();
    mfrc522.PCD_StopCrypto1();
  }
}

void sendToServer(String uid) {
  HTTPClient http;

  String url = serverUrl + "?uid=" + uid;
  http.begin(url);

  int httpCode = http.GET();
  if (httpCode > 0) {
    if (httpCode == HTTP_CODE_OK) {
      Serial.println("Data sent successfully");
    } else {
      Serial.println("Error sending data");
    }
  }

  http.end();
}
